<?php

/**
 * @file
 * Htaccess is a module which autogenerates a Drupal root htaccess 
 * file based on your settings.
 */

define('HTACCESS_TEMPLATE_PATH', drupal_get_path('module', 'htaccess') . '/includes/htaccess.txt');

/**
 * Implementation of hook_help()
 */
function htaccess_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#htaccess":
      $output = '<p>'.  t("Auto generate htaccess. ") .'</p>';
      break;
  }
  return $output;
}

/**
 * Implementation of hook_permission()
 */
function htaccess_permission() {
  return array(
    'administer htaccess module' => array(
      'title' => t('Administer htaccess module'),
      'description' => t('Ability to generate htaccess.'),
    ),
  );
}

/**
 * Implementation of hook_menu()
 */
function htaccess_menu() {
  $items = array();

  $items['admin/config/system/htaccess'] = array(
    'title' => t('Htaccess'),
    'description' => t('Configure htaccess.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htaccess_settings'),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/system/htaccess/main'] = array(
  'title' => t('Settings'),
  'type' => MENU_DEFAULT_LOCAL_TASK,
  'weight' => 10,
  );

  $items['admin/config/system/htaccess/generate'] = array(
    'title' => t('Generate'),
    'description' => t('Generate htaccess.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htaccess_generate'),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
  );

  $items['admin/config/system/htaccess/deployment'] = array(
    'title' => t('Deployment'),
    'description' => t('Deploy htaccess.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('htaccess_deployment'),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 30,
  );

  $items['admin/config/system/htaccess/deployment/view/%'] = array(
    'page callback' => 'htaccess_display',
    'page arguments' => array(6),
    'access arguments' => array('administer htaccess module'),
    'file' => 'htaccess.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 30,
  );

  $items['admin/config/system/htaccess/deployment/deploy/%'] = array(
    'page callback' => 'htaccess_deploy',
    'page arguments' => array(6),
    'access arguments' => array('administer htaccess module'),
    'type' => MENU_CALLBACK,
    'weight' => 30,
  );

  $items['admin/config/system/htaccess/deployment/download/%'] = array(
    'page callback' => 'htaccess_download',
    'page arguments' => array(6),
    'access arguments' => array('administer htaccess module'),
    'type' => MENU_CALLBACK,
    'weight' => 30,
  );

  $items['admin/config/system/htaccess/deployment/delete/%'] = array(
    'page callback' => 'htaccess_delete',
    'page arguments' => array(6),
    'access arguments' => array('administer htaccess module'),
    'type' => MENU_CALLBACK,
    'weight' => 30,
  );

  return $items;
}

function htaccess_deploy($id){
  $root_path = DRUPAL_ROOT;

  $htaccess_path =  $root_path   . '/.htaccess';

  $htaccess_get = db_select('htaccess', 'h')
    ->fields('h')
    ->condition('id', array(':id' => $id))
    ->execute()
    ->fetchAssoc();

  $htaccess_content = $htaccess_get['htaccess'];

  // Remove utf8-BOM
  $htaccess_content = str_replace("\xEF\xBB\xBF",'', $htaccess_content); 

  // Try to write to the .htaccess file
  if (file_put_contents($htaccess_path, $htaccess_content)) {
    drupal_chmod($htaccess_path, 0644);
    
    // Get the current htaccess deployed
    $htaccess_current = db_select('htaccess', 'h')
    ->fields('h')
    ->condition('deployed', 1, '=')
    ->execute()
    ->fetchAssoc();

    // If any, set the status to 0
    if($htaccess_current){
      db_update('htaccess')->fields(array(
      'deployed' => 0))
      ->condition('id', $htaccess_current['id'], '=')
      ->execute();
    }

    // Set the status to 1
    db_update('htaccess')->fields(array(
    'deployed' => 1))
    ->condition('id', $htaccess_get['id'], '=')
    ->execute();
    
    drupal_set_message(t('Htaccess profile "'.$htaccess_get['name'].'" has been deployed.'));

    drupal_goto("admin/config/system/htaccess/deployment");
  }
  else {
    $variables = array(
      '%directory' => $root_path,
      '!htaccess' => '<br />' . nl2br(check_plain($htaccess_content)),
    );

    watchdog('security', "Security warning: Couldn't write .htaccess file.", $variables, WATCHDOG_ERROR);

    drupal_set_message(t('Error during deployment: couldn\'t write .htaccess file. You have to download it and manually put it in the root of your Drupal installation.'), 'error');

    drupal_goto("admin/config/system/htaccess/deployment");
  }
}

function htaccess_download($id){
  $htaccess_get = db_select('htaccess', 'h')
    ->fields('h')
    ->condition('id', array(':id' => $id),'IN')
    ->execute()
    ->fetchAssoc();

  $htaccess_content = $htaccess_get['htaccess'];

  // Remove utf8-BOM
  $htaccess_content = str_replace("\xEF\xBB\xBF",'', $htaccess_content); 

  $file_name = $htaccess_get['name'].'.htaccess';

  $htaccess_folder = 'public://htaccess'; 
  
  if(file_prepare_directory($htaccess_folder, FILE_CREATE_DIRECTORY)) {

    file_create_htaccess($htaccess_folder, true, false);

    $htaccess_file = file_unmanaged_save_data($htaccess_content, $htaccess_folder. '/' .$file_name, FILE_EXISTS_REPLACE);
  
    file_transfer($htaccess_file, array(
      'Content-Type' => 'application/octet-stream',
      'Content-disposition' => 'attachment; filename='.$file_name));
  }
}

function htaccess_delete($id){
  // Check that the profile is not in use
  $htaccess_check = db_select('htaccess', 'h')
   ->fields('h')
   ->condition('deployed', 1, '=')
   ->condition('id', array(':id' => $id),'IN')
   ->execute()
   ->fetchAssoc();

  if($htaccess_check){
    drupal_set_message(t('This htaccess\'s profile is currently in use'), 'error');
   }
  else{
    $htaccess_get = db_delete('htaccess')
      ->condition('id', array(':id' => $id))
      ->execute();

    drupal_set_message(t('Htacces profile has been removed.'));
  }

  drupal_goto("admin/config/system/htaccess/deployment");
}

function htaccess_cron(){
  // try to get current htaccess content
  $root_path = DRUPAL_ROOT;

  $htaccess_filepath = $root_path.'/.htaccess';

  $htaccess_current = file_get_contents($htaccess_filepath);

  if($htaccess_current){
    // Get the current htaccess deployed
    $htaccess_deployed = db_select('htaccess', 'h')
    ->fields('h')
    ->condition('deployed', 1, '=')
    ->execute()
    ->fetchAssoc();

    if($htaccess_deployed){

      $htaccess_deployed = $htaccess_deployed['htaccess'];

        // Compare the two results
        if($htaccess_current === $htaccess_deployed){
        
          variable_del('htaccess_altered');

        }
        else{

          drupal_set_message(t('The htaccess seems to be altered.'), 'warning');
          variable_set('htaccess_altered', true);
      }
    }
  }
}
